package iot.unipi.it;

import java.io.IOException;
import java.util.ArrayList;

import org.eclipse.californium.core.CoapClient;
import org.eclipse.californium.core.CoapResponse;
import org.eclipse.californium.core.coap.MediaTypeRegistry;

public class MainApp {

	public static ArrayList<CoapObserverClient> coapObserverClients = new ArrayList<CoapObserverClient>();
	public static ArrayList<Thermometer> thermometers = new ArrayList<Thermometer>();
	public static ArrayList<Alarm> alarms = new ArrayList<Alarm>();

	public static void main(String[] args) throws IOException, InterruptedException {

		runServer();
		showResources();

		while (true) {
			try {

			} catch (Exception e) {
				System.out.println("Invalid input, here are the available commands\n");
				e.printStackTrace();
			}
		}
	}

	public static void runServer() {
		new Thread() {
			public void run() {
				Server server = new Server();
				server.startServer();
			}
		}.start();
	}

	public static void showResources() {
		if(thermometers.isEmpty())
			System.out.println("No resources registered yet.");
		else{
			System.out.println("List of the Resources in the system:");
			for (int i = 0; i < thermometers.size(); i++) {
				Thermometer t = thermometers.get(i);
				Alarm a = alarms.get(i);
				System.out.println(
						+i + "\tThermometer: " + t.getNodeAddress() + " " + t.getResourcePath());
				System.out.println(+i + "\tAlarm: " + a.getNodeAddress() + " "
						+ a.getResourcePath() + "\n");
			}
		} 
			
	}
	public static void showResourcesInformation() {
		System.out.println("Information about the resources: \n");
		for (int i = 0; i < thermometers.size(); ++i) {
			showSingleResourceInformation(i);
			System.out.println("\n -------------------------------------------- \n");
		}
	}

	public static void triggerAlarm(String state, Alarm a) {
		CoapClient client = new CoapClient(a.getResourceURI());
		CoapResponse response = client.post("", MediaTypeRegistry.TEXT_PLAIN);
		String code = response.getCode().toString();
		if (!code.startsWith("2")) {
			System.out.println("Error: " + code);
			return;
		}
		System.out.println("Alarm is: " + state);
	}

	public static void showSingleResourceInformation(Integer index) {
		Alarm a = alarms.get(index);
		String stateValue = a.getState() ? "ON" : "OFF";
		System.out.println(index + "\t" + a.getNodeAddress() + " " + a.getResourcePath()
				+ "\n\t\tState: " + stateValue + "\n");

		Thermometer t = thermometers.get(index);
		System.out.println(index + "\t" + t.getNodeAddress() + " " + t.getResourcePath());
		ArrayList<String> list = t.getTemperatureValues();
		for (int j = 0; j < list.size(); ++j)
			System.out.println("\t\tId: " + j + "\tValue: " + list.get(j));
	}

}
